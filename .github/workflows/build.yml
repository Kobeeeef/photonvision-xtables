name: Build

on:
  # Run on pushes to main and pushed tags, and on pull requests against main, but ignore the docs folder
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true
jobs:
  build-client:
    name: "PhotonClient Build"
    defaults:
      run:
        working-directory: photon-client
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Dependencies
        run: npm ci
      - name: Build Production Client
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: built-client
          path: photon-client/dist/
  build-offline-docs:
    name: "Build Offline Docs"
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install graphviz
        run: |
          sudo apt-get update
          sudo apt-get -y install graphviz
      - name: Install dependencies
        working-directory: docs
        run: |
          python -m pip install --upgrade pip
          pip install sphinx sphinx_rtd_theme sphinx-tabs sphinxext-opengraph doc8
          pip install -r requirements.txt
      - name: Build the docs
        working-directory: docs
        run: |
          make html
      - uses: actions/upload-artifact@v4
        with:
          name: built-docs
          path: docs/build/html
  build-gradle:
    name: "Gradle Build"
    runs-on: ubuntu-22.04
    steps:
      # Checkout code.
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Fetch tags
        run: git fetch --tags --force
      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
      - name: Install mrcal deps
        run: sudo apt-get update && sudo apt-get install -y libcholmod3 liblapack3 libsuitesparseconfig5
      - name: Gradle Build
        run: ./gradlew photon-targeting:build photon-core:build photon-server:build -x check
      - name: Gradle Tests
        run: ./gradlew testHeadless -i --stacktrace
      - name: Gradle Coverage
        run: ./gradlew jacocoTestReport
      - name: Publish Coverage Report
        uses: codecov/codecov-action@v4
        with:
          file: ./photon-server/build/reports/jacoco/test/jacocoTestReport.xml
      - name: Publish Core Coverage Report
        uses: codecov/codecov-action@v4
        with:
          file: ./photon-core/build/reports/jacoco/test/jacocoTestReport.xml

  build-package:
    needs: [build-client, build-gradle, build-offline-docs]

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            artifact-name: LinuxArm64
            architecture: x64
            arch-override: linuxarm64

    runs-on: ${{ matrix.os }}
    name: "Build fat JAR - ${{ matrix.artifact-name }}"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Java 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          architecture: ${{ matrix.architecture }}
      - name: Install Arm64 Toolchain
        run: ./gradlew installArm64Toolchain
        if: ${{ (matrix.artifact-name) == 'LinuxArm64' }}
      - run: |
          rm -rf photon-server/src/main/resources/web/*
          mkdir -p photon-server/src/main/resources/web/docs
        if: ${{ (matrix.os) != 'windows-latest' }}
      - run: |
          del photon-server\src\main\resources\web\*.*
          mkdir photon-server\src\main\resources\web\docs
        if: ${{ (matrix.os) == 'windows-latest' }}
      - uses: actions/download-artifact@v4
        with:
          name: built-client
          path: photon-server/src/main/resources/web/
      - uses: actions/download-artifact@v4
        with:
          name: built-docs
          path: photon-server/src/main/resources/web/docs
      - run: ./gradlew photon-targeting:jar photon-server:shadowJar -PArchOverride=${{ matrix.arch-override }}
        if: ${{ (matrix.arch-override != 'none') }}
      - run: ./gradlew photon-server:shadowJar
        if: ${{ (matrix.arch-override == 'none') }}
      - uses: actions/upload-artifact@v4
        with:
          name: jar-${{ matrix.artifact-name }}
          path: photon-server/build/libs
      - uses: actions/upload-artifact@v4
        with:
          name: photon-targeting_jar-${{ matrix.artifact-name }}
          path: photon-targeting/build/libs

